generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:../libs/database.db"
}
model Product {
  id             Int                   @id @default(autoincrement())
  title          String
  description    String
  price          Int
  discount       Int?
  rating         Int?
  slug           String
  thumbnail      String
  date_added     DateTime              @default(now())
  
  images         ProductImage[]
  comments       Comment[]
  filters        ProductFilter[]
  storyProducts  StoryProduct[]
  meta_data      Product_meta[]
  wishlists      WishList[]

  productCategories Product_to_category[]
}

model Product_meta{
  id        Int     @id @default(autoincrement())
  name      String
  value    String
  product_id Int
  product  Product @relation(fields: [product_id], references: [id])
}
model ProductImage {
  id        Int     @id @default(autoincrement())
  imageUrl  String
  product   Product @relation(fields: [product_id], references: [id])
  product_id Int
}
model Product_to_category {
  id          Int      @id @default(autoincrement())
  product     Product  @relation(fields: [product_id], references: [id])
  product_id  Int
  category    Category @relation(fields: [category_id], references: [id])
  category_id Int
  @@unique([product_id, category_id]) 
}
model Category {
  id           Int           @id @default(autoincrement())
  name         String
  description  String
  slug         String
  parent_id    Int?
  parent       Category?     @relation("CategoryHierarchy", fields: [parent_id], references: [id])
  children     Category[]    @relation("CategoryHierarchy")
  meta_data    Category_meta[]

  productCategories Product_to_category[]
}

model Category_meta{
  id        Int     @id @default(autoincrement())
  name      String
  value    String
  category_id Int
  category   Category @relation(fields: [category_id], references: [id])
}
model Comment {
  id          Int      @id @default(autoincrement())
  name        String
  email       String
  message     String
  createdAt   DateTime @default(now())
  adminReply  String?
  product     Product  @relation(fields: [product_id], references: [id])
  product_id   Int
  user_id      Int?
}

model WishList {
  id        Int     @id @default(autoincrement())
  user_id    Int
  product_id Int
  product   Product @relation(fields: [product_id], references: [id])
}

model Customer {
  id         String        @id 
  name       String?
  email      String?
  image String?
  number    String?
  geust Boolean
}

model Blog {
  id         Int            @id @default(autoincrement())
  title      String
  description String
  content    String
  thumbnail  String
  slug       String
  createdAt  DateTime       @default(now())
  comments   BlogComment[]
}

model BlogComment {
  id        Int     @id @default(autoincrement())
  name      String
  message   String
  createdAt DateTime @default(now())
  blog      Blog    @relation(fields: [blog_id], references: [id])
  blog_id    Int
}

model Filter {
  id       Int             @id @default(autoincrement())
  name     String
  type     String
  options  FilterOption[]
}

model FilterOption {
  id       Int            @id @default(autoincrement())
  value    String
  filter   Filter         @relation(fields: [filter_id], references: [id])
  filter_id Int
  products ProductFilter[]
}

model ProductFilter {
  id              Int           @id @default(autoincrement())
  product         Product       @relation(fields: [product_id], references: [id])
  product_id       Int
  filterOption    FilterOption  @relation(fields: [filterOption_id], references: [id])
  filterOption_id  Int
}

model Story {
  id           Int           @id @default(autoincrement())
  profileImage String
  viewCount    Int
  description  String
  callMe       String
  unknownImage String
  user_id       Int
  products     StoryProduct[]
}

model StoryProduct {
  id        Int     @id @default(autoincrement())
  story     Story   @relation(fields: [story_id], references: [id])
  story_id   Int
  product   Product @relation(fields: [product_id], references: [id])
  product_id Int
}